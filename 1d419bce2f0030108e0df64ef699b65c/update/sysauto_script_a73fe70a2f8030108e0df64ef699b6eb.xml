<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time>1970-01-01 00:00:00</entered_time>
        <name>Get Service Principals and trigger task creation flow</name>
        <offset/>
        <offset_type/>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2021-05-12 22:05:03</run_start>
        <run_time>1970-01-01 12:00:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[try {
    var r = new sn_ws.RESTMessageV2('x_337610_azure_ser.Azure Service Principals Graph API', 'Get List of Service Principals');

    var response = r.execute();
    var responseBody = response.getBody();
    var httpStatus = response.getStatusCode();
	
	if (httpStatus == 200) {
		var body = JSON.parse(responseBody);
		for (i = 0; i < body.values.length; i++) {
			/* process objects
			TODO
			* check if keyCredentials or passwordCredentials are set
			* if set check the expiry
			* add credential name to flow
			* start flow for each expiring credential
			* add check to flow to not create duplicate tasks
			
			{
            "id": "104e84c9-ec17-4886-9502-e5c68a7e311c",
            "appDisplayName": "ServiceNow PROD",
            "appId": "c24cbea5-1264-495f-be65-d5e570e6d154",
            "keyCredentials": [
                {
                    "customKeyIdentifier": "4JgM/U9j/oCFgrW9YJVE4S/umDWq4NhoVdBbY11P98c=",
                    "displayName": "CN=Microsoft Azure Federated SSO Certificate",
                    "endDateTime": "2023-09-22T14:11:38Z",
                    "key": null,
                    "keyId": "fba287b9-d54e-400e-9a06-143790fa3e10",
                    "startDateTime": "2020-09-22T14:11:38Z",
                    "type": "AsymmetricX509Cert",
                    "usage": "Sign"
                },
                {
                    "customKeyIdentifier": "4JgM/U9j/oCFgrW9YJVE4S/umDWq4NhoVdBbY11P98c=",
                    "displayName": "CN=Microsoft Azure Federated SSO Certificate",
                    "endDateTime": "2023-09-22T14:11:38Z",
                    "key": null,
                    "keyId": "a71dfb32-dfe5-4487-b645-3bafff4701d1",
                    "startDateTime": "2020-09-22T14:11:38Z",
                    "type": "AsymmetricX509Cert",
                    "usage": "Verify"
                }
            ],
            "passwordCredentials": [
                {
                    "customKeyIdentifier": "4JgM/U9j/oCFgrW9YJVE4S/umDWq4NhoVdBbY11P98c=",
                    "displayName": "CN=Microsoft Azure Federated SSO Certificate",
                    "endDateTime": "2023-09-22T14:11:38Z",
                    "hint": null,
                    "keyId": "fba287b9-d54e-400e-9a06-143790fa3e10",
                    "secretText": null,
                    "startDateTime": "2020-09-22T14:11:38Z"
                }
            ]
        },
		*/
		}
	} else {
		throw 'got http status ' + httpStatus + ' from graph API.';
	}

} catch (ex) {
    var message = ex.message;
	gs.error('x_337610_azure_ser: error occured while fetching service principals. ' + message);
}

function startFlow(principalName, principalId, expiryDate, expiryObject) {
	try {
		var inputs = {};
		inputs['service_principal_name'] = principalName; // String 
		inputs['service_principal_id'] = principalId; // String 
		inputs['expiry_date'] = expiryDate; // Date 
		inputs['expiring_object'] = expiryObject; // Choice
		sn_fd.FlowAPI.getRunner().subflow('x_337610_azure_ser.default_azure_service_principal_processing_flow').inBackground().withInputs(inputs).run();

	} catch (ex) {
		var message = ex.getMessage();
		gs.error('x_337610_azure_ser: error occured while trying to trigger flow ' + message);
	}	
}]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-05-12 22:10:59</sys_created_on>
        <sys_id>a73fe70a2f8030108e0df64ef699b6eb</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Get Service Principals and trigger task creation flow</sys_name>
        <sys_package display_value="Azure Service Principal Secret Expiry Watchdog" source="x_337610_azure_ser">1d419bce2f0030108e0df64ef699b65c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Azure Service Principal Secret Expiry Watchdog">1d419bce2f0030108e0df64ef699b65c</sys_scope>
        <sys_update_name>sysauto_script_a73fe70a2f8030108e0df64ef699b6eb</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-05-12 22:55:54</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
